[{"D:\\react-ekart-project\\client\\src\\index.js":"1","D:\\react-ekart-project\\client\\src\\data.js":"2","D:\\react-ekart-project\\client\\src\\components\\Home page\\Home.jsx":"3","D:\\react-ekart-project\\client\\src\\components\\Home page\\Carousel\\CarouselSlider.jsx":"4","D:\\react-ekart-project\\client\\src\\components\\Home page\\BrandNewProducts.jsx":"5","D:\\react-ekart-project\\client\\src\\components\\Home page\\AllProducts.jsx":"6","D:\\react-ekart-project\\client\\src\\components\\Cart\\Cart.jsx":"7","D:\\react-ekart-project\\client\\src\\components\\Cart\\CartItem.jsx":"8","D:\\react-ekart-project\\client\\src\\components\\Cart\\PriceDetail.jsx":"9","D:\\react-ekart-project\\client\\src\\components\\specific item\\SpecificItem.jsx":"10","D:\\react-ekart-project\\client\\src\\components\\Common\\PriceDisplay.jsx":"11","D:\\react-ekart-project\\client\\src\\components\\Common\\CustomCard.jsx":"12","D:\\react-ekart-project\\client\\src\\components\\Common\\RatingDisplay.jsx":"13","D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSection.jsx":"14","D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSectionCard.jsx":"15","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\index.js":"16","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\ProductReducer.js":"17","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\ProductActions.js":"18","D:\\react-ekart-project\\client\\src\\components\\Cart\\IncBtn.jsx":"19","D:\\react-ekart-project\\client\\src\\components\\Cart\\DecBtn.jsx":"20","D:\\react-ekart-project\\client\\src\\components\\Common\\Pagination.jsx":"21","D:\\react-ekart-project\\client\\src\\components\\AuthForm\\index.jsx":"22","D:\\react-ekart-project\\client\\src\\components\\Navbar\\NavBar.jsx":"23","D:\\react-ekart-project\\client\\src\\App.js":"24","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\AuthAction.js":"25","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\CartAction.js":"26","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\AuthReducer.js":"27","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\CartReducer.js":"28","D:\\react-ekart-project\\client\\src\\components\\Common\\Spinner.jsx":"29","D:\\react-ekart-project\\client\\src\\components\\Ratings\\Ratings.jsx":"30","D:\\react-ekart-project\\client\\src\\components\\Ratings\\RatingForm.jsx":"31","D:\\react-ekart-project\\client\\src\\components\\specific item\\RatingContainer.jsx":"32","D:\\react-ekart-project\\client\\src\\components\\Account\\index.jsx":"33","D:\\react-ekart-project\\client\\src\\components\\Account\\Products\\Products.jsx":"34","D:\\react-ekart-project\\client\\src\\components\\Account\\Products\\SingleProduct.jsx":"35","D:\\react-ekart-project\\client\\src\\components\\Account\\AccountForm.jsx":"36","D:\\react-ekart-project\\client\\src\\components\\Common\\InputValidationProps.js":"37","D:\\react-ekart-project\\client\\src\\components\\Common\\CustomFormGroup.jsx":"38","D:\\react-ekart-project\\client\\src\\components\\Common\\ButtonLoading.jsx":"39","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\OrderReducer.js":"40","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\RatingReducer.js":"41","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\RatingAction.js":"42","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\OrderAction.js":"43","D:\\react-ekart-project\\client\\src\\components\\customhooks\\useOrderLocalStorage.js":"44","D:\\react-ekart-project\\client\\src\\components\\customhooks\\useRatingsSessionStorage.js":"45"},{"size":625,"mtime":1612418855087,"results":"46","hashOfConfig":"47"},{"size":16778,"mtime":1609043815540,"results":"48","hashOfConfig":"49"},{"size":1752,"mtime":1612035590529,"results":"50","hashOfConfig":"47"},{"size":1977,"mtime":1611517081290,"results":"51","hashOfConfig":"47"},{"size":1006,"mtime":1611327277647,"results":"52","hashOfConfig":"47"},{"size":1672,"mtime":1612368578891,"results":"53","hashOfConfig":"47"},{"size":1288,"mtime":1611342699690,"results":"54","hashOfConfig":"47"},{"size":2684,"mtime":1611599840148,"results":"55","hashOfConfig":"47"},{"size":4373,"mtime":1612035590529,"results":"56","hashOfConfig":"47"},{"size":3945,"mtime":1612418176290,"results":"57","hashOfConfig":"47"},{"size":419,"mtime":1608642022477,"results":"58","hashOfConfig":"47"},{"size":1315,"mtime":1612416647746,"results":"59","hashOfConfig":"47"},{"size":332,"mtime":1611511637544,"results":"60","hashOfConfig":"47"},{"size":986,"mtime":1611327419673,"results":"61","hashOfConfig":"47"},{"size":1001,"mtime":1611517438111,"results":"62","hashOfConfig":"47"},{"size":425,"mtime":1611593483461,"results":"63","hashOfConfig":"47"},{"size":1088,"mtime":1611597016240,"results":"64","hashOfConfig":"47"},{"size":1084,"mtime":1612425085852,"results":"65","hashOfConfig":"47"},{"size":305,"mtime":1609045814574,"results":"66","hashOfConfig":"47"},{"size":306,"mtime":1609045872847,"results":"67","hashOfConfig":"47"},{"size":661,"mtime":1609268078733,"results":"68","hashOfConfig":"47"},{"size":3999,"mtime":1612415814908,"results":"69","hashOfConfig":"47"},{"size":2886,"mtime":1612035590529,"results":"70","hashOfConfig":"47"},{"size":2267,"mtime":1611599043085,"results":"71","hashOfConfig":"47"},{"size":2050,"mtime":1612425015940,"results":"72","hashOfConfig":"47"},{"size":679,"mtime":1611342766278,"results":"73","hashOfConfig":"47"},{"size":993,"mtime":1612339491755,"results":"74","hashOfConfig":"47"},{"size":1201,"mtime":1612035582148,"results":"75","hashOfConfig":"47"},{"size":421,"mtime":1611556146273,"results":"76","hashOfConfig":"47"},{"size":1613,"mtime":1611515715312,"results":"77","hashOfConfig":"47"},{"size":4352,"mtime":1612417872032,"results":"78","hashOfConfig":"47"},{"size":2054,"mtime":1612423786970,"results":"79","hashOfConfig":"47"},{"size":841,"mtime":1611598273092,"results":"80","hashOfConfig":"47"},{"size":2569,"mtime":1612034858334,"results":"81","hashOfConfig":"47"},{"size":1610,"mtime":1612423819274,"results":"82","hashOfConfig":"47"},{"size":4260,"mtime":1612418408140,"results":"83","hashOfConfig":"47"},{"size":650,"mtime":1612415777063,"results":"84","hashOfConfig":"47"},{"size":1069,"mtime":1611598137448,"results":"85","hashOfConfig":"47"},{"size":615,"mtime":1611557140740,"results":"86","hashOfConfig":"47"},{"size":1054,"mtime":1612356670840,"results":"87","hashOfConfig":"47"},{"size":935,"mtime":1612374729974,"results":"88","hashOfConfig":"47"},{"size":1571,"mtime":1612425107952,"results":"89","hashOfConfig":"47"},{"size":2118,"mtime":1612425060714,"results":"90","hashOfConfig":"47"},{"size":1030,"mtime":1612338733543,"results":"91","hashOfConfig":"47"},{"size":1137,"mtime":1612378169547,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1ryk94n",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1crfyh2",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"95"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"95"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"95"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"95"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"95"},"D:\\react-ekart-project\\client\\src\\index.js",[],["203","204"],"D:\\react-ekart-project\\client\\src\\data.js",[],["205","206"],"D:\\react-ekart-project\\client\\src\\components\\Home page\\Home.jsx",["207","208"],"import React, { lazy, useEffect } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllProducts__Api,\r\n  getAllProducts__fun,\r\n} from \"../../Redux/Actions/ProductActions\";\r\n\r\nimport BrandNewProducts from \"./BrandNewProducts\";\r\nimport CarouselSlider from \"./Carousel/CarouselSlider\";\r\n\r\nconst AllProducts = lazy(() => import(\"./AllProducts\"));\r\nconst OfferSection = lazy(() => import(\"./offer section/OfferSection\"));\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const allProducts = useSelector(\r\n    ({ ProductReducer: { products } }) => products\r\n  );\r\n\r\n  const loading = useSelector(({ ProductReducer: { loading } }) => loading);\r\n\r\n  const error = useSelector(({ ProductReducer: { error } }) => error);\r\n\r\n  useEffect(() => {\r\n    const getLocalStoragee = localStorage.getItem(\"allProducts\");\r\n\r\n    if (getLocalStoragee && JSON.parse(getLocalStoragee).length) {\r\n      dispatch(getAllProducts__fun(JSON.parse(getLocalStoragee)));\r\n    } else {\r\n      dispatch(getAllProducts__Api());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"allProducts\", JSON.stringify(allProducts));\r\n  }, [allProducts.length]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        {allProducts.length && (\r\n          <>\r\n            <CarouselSlider />\r\n            <BrandNewProducts />\r\n            <OfferSection />\r\n            <AllProducts />\r\n          </>\r\n        )}\r\n        {loading && <Spinner />}\r\n\r\n        {error.payload && (\r\n          <h6 className=\"text-danger text-center font-weight-bold product-error\">\r\n            {JSON.stringify(error)}\r\n          </h6>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\react-ekart-project\\client\\src\\components\\Home page\\Carousel\\CarouselSlider.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\BrandNewProducts.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\AllProducts.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\Cart.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\CartItem.jsx",["209"],"import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PriceDisplay from \"../Common/PriceDisplay\";\r\nimport IncBtn from \"./IncBtn\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DecBtn from \"./DecBtn\";\r\nimport {\r\n  decQty__fun,\r\n  incQty__fun,\r\n  removeFromCart__fun,\r\n} from \"../../Redux/Actions/CartAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ id, image, price, title }) => {\r\n  const cartItem = useSelector(({ CartReducer: { cart } }) =>\r\n    cart.find(item => item.id == id)\r\n  );\r\n\r\n  const [inputVal, setInputVal] = useState(cartItem.qty);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleBack = () => history.push(`/specificItem/${id}`);\r\n\r\n  const handleInc = id => {\r\n    setInputVal(prev => prev + 1);\r\n    dispatch(incQty__fun(id));\r\n  };\r\n\r\n  const handleDec = id => {\r\n    if (inputVal >= 1) {\r\n      setInputVal(prev => prev - 1);\r\n      dispatch(decQty__fun(id));\r\n    }\r\n\r\n    inputVal <= 1 && dispatch(removeFromCart__fun(id));\r\n  };\r\n\r\n  const handleRemoveBtn = e => {\r\n    dispatch(removeFromCart__fun(e.target.dataset.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cartItem\">\r\n        <div className=\"cartItem__container\">\r\n          <Row className=\"justify-content-around align-items-center\">\r\n            <Col lg={4}>\r\n              <figure onClick={handleBack}>\r\n                <img src={image} alt=\"\" />\r\n              </figure>\r\n\r\n              <div className=\"btn__group d-flex align-items-center justify-content-start\">\r\n                <DecBtn handleClick={handleDec} id={id} />\r\n\r\n                <input\r\n                  min={1}\r\n                  type=\"number\"\r\n                  value={inputVal}\r\n                  onChange={e => setInputVal(e.target.value)}\r\n                  readOnly={true}\r\n                />\r\n\r\n                <IncBtn handleClick={handleInc} id={id} />\r\n              </div>\r\n            </Col>\r\n\r\n            <Col lg={6} className=\"offset-lg-2\">\r\n              <div className=\"cartItem__content text-uppercase\">\r\n                <h6 className=\"text-capitalize font-weight-bold productName\">\r\n                  {title && title.slice(0, 250)}....\r\n                </h6>\r\n                <PriceDisplay price={price} />\r\n                <button\r\n                  className=\"removeBtn\"\r\n                  data-id={id}\r\n                  onClick={handleRemoveBtn}>\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","D:\\react-ekart-project\\client\\src\\components\\Cart\\PriceDetail.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\specific item\\SpecificItem.jsx",["210","211","212","213"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {\r\n  getSpecficProduct__fun,\r\n  setSpecificProduct__fun,\r\n} from \"../../Redux/Actions/ProductActions\";\r\nimport RatingDisplay from \"../Common/RatingDisplay\";\r\nimport PriceDisplay from \"../Common/PriceDisplay\";\r\nimport {\r\n  addToCart__fun,\r\n  removeFromCart__fun,\r\n} from \"../../Redux/Actions/CartAction\";\r\nimport RatingContainer from \"./RatingContainer\";\r\nimport { useRatingsStorage } from \"../customhooks/useRatingsSessionStorage\";\r\n\r\nconst SpecificItem = () => {\r\n  const { id } = useParams();\r\n  const [isInCart, setIsInCart] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const ref = useRef();\r\n  const { findSumOfRatings } = useRatingsStorage();\r\n\r\n  let result = findSumOfRatings(id);\r\n\r\n  const product = useSelector(({ ProductReducer: { specificProduct } }) => {\r\n    return specificProduct;\r\n  });\r\n  const cartItems = useSelector(({ CartReducer: { cart } }) => cart);\r\n  const findItemInCart = cartItems.findIndex(item => item.id == id);\r\n\r\n  const handleAddToCartBtn = e => {\r\n    let { title, image, price } = product;\r\n\r\n    !isInCart\r\n      ? dispatch(\r\n          addToCart__fun({ title, image, price, id: product.id, qty: 1 })\r\n        )\r\n      : dispatch(removeFromCart__fun(e.target.dataset.id));\r\n    setIsInCart(!isInCart);\r\n  };\r\n\r\n  const handleBackBtn = () => history.push(\"/\");\r\n\r\n  useEffect(() => {\r\n    let getSessionData = sessionStorage.getItem(\"productDetail\");\r\n\r\n    if (getSessionData && JSON.parse(getSessionData).image) {\r\n      dispatch(setSpecificProduct__fun(JSON.parse(getSessionData)));\r\n    } else {\r\n      dispatch(getSpecficProduct__fun(id));\r\n    }\r\n\r\n    return () => {\r\n      sessionStorage.removeItem(\"productDetail\");\r\n      dispatch(setSpecificProduct__fun({}));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    findItemInCart != -1 && setIsInCart(true);\r\n    sessionStorage.setItem(\"productDetail\", JSON.stringify(product));\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"specificPage\" ref={ref}>\r\n      <div className=\"specificPage__container\">\r\n        <Row className=\"align-items-center justify-content-center\">\r\n          {product && (\r\n            <>\r\n              <Col lg={6} md={6} sm={12}>\r\n                <img src={product.image} alt=\"\" />\r\n              </Col>\r\n              <Col lg={6} md={6} sm={12}>\r\n                <div className=\"specificPage__content Card\">\r\n                  <h6 className=\"Card__title text-capitalize pt-3\">\r\n                    {product.title}\r\n                  </h6>\r\n\r\n                  {result ? (\r\n                    <RatingDisplay rating={result} />\r\n                  ) : (\r\n                    <h6 className=\"my-3 font-weight-bold text-secondary\">\r\n                      No ratings\r\n                    </h6>\r\n                  )}\r\n\r\n                  <PriceDisplay price={product.price} />\r\n                  <p>{product.description}</p>\r\n\r\n                  <div className=\"btn__group d-flex mb-4\">\r\n                    <button className=\"back mr-2\" onClick={handleBackBtn}>\r\n                      Back to home\r\n                    </button>\r\n                    <button\r\n                      className={isInCart ? \"remove\" : \"add\"}\r\n                      onClick={handleAddToCartBtn}\r\n                      data-id={product.id}>\r\n                      {isInCart ? \"remove from cart\" : \"add to cart\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n      </div>\r\n\r\n      <RatingContainer productId={product.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificItem;\r\n","D:\\react-ekart-project\\client\\src\\components\\Common\\PriceDisplay.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\CustomCard.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\RatingDisplay.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSection.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSectionCard.jsx",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\index.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\ProductReducer.js",["214"],"import {\r\n  GETALLPRODUCTS,\r\n  PRODUCT__ERROR,\r\n  PRODUCT__LOADING,\r\n  GETSPECIFICPRODUCT,\r\n  SETSPECIFICPRODUCT,\r\n} from \"../Actions/ProductActions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  specificProduct: {},\r\n  loading: false,\r\n  error: {},\r\n};\r\n\r\nexport const ProductReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GETALLPRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...payload],\r\n        loading: false,\r\n        error: {},\r\n      };\r\n\r\n    case GETSPECIFICPRODUCT:\r\n      return {\r\n        ...state,\r\n        specificProduct: { ...state.products.find(item => item.id == payload) },\r\n      };\r\n\r\n    case SETSPECIFICPRODUCT:\r\n      return {\r\n        ...state,\r\n        specificProduct: { ...payload },\r\n      };\r\n\r\n    case PRODUCT__LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT__ERROR:\r\n      return {\r\n        products: [],\r\n        specificProduct: {},\r\n        loading: false,\r\n        error: { payload },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\ProductActions.js",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\IncBtn.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\DecBtn.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\Pagination.jsx",["215"],"import React from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst Paginate = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n  let active = 1;\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(\r\n      <Pagination.Item\r\n        onClick={() => paginate(i)}\r\n        key={i}\r\n        active={i === active}>\r\n        {i}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  const handleClick = (e, number) => {\r\n    e.preventDefault();\r\n    paginate(number);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination>{pageNumbers}</Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","D:\\react-ekart-project\\client\\src\\components\\AuthForm\\index.jsx",["216"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport CustomFormGroup from \"../Common/CustomFormGroup\";\r\nimport {\r\n  login__Api,\r\n  logout__Fun,\r\n  setAuthError__Fun,\r\n  signup__Api,\r\n} from \"../../Redux/Actions/AuthAction\";\r\nimport ButtonLoading from \"../Common/ButtonLoading\";\r\n\r\nconst AuthForm = () => {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const authError = useSelector(({ AuthReducer: { error } }) => error);\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n  const authLoading = useSelector(({ AuthReducer: { loading } }) => loading);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (data, e) => {\r\n    if (isSignUp) {\r\n      dispatch(signup__Api(data));\r\n    } else {\r\n      dispatch(login__Api(data));\r\n    }\r\n  };\r\n\r\n  const handleSwitchMode = () => {\r\n    setIsSignUp(prev => !prev);\r\n    authError && dispatch(setAuthError__Fun());\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    isAuth.isAllowed && history.push(\"/\");\r\n    if (authError.message || authError.email) {\r\n      logout__Fun();\r\n    }\r\n  }, [isSignUp, isAuth.isAllowed, authError.message, authError.email]);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"authForm\">\r\n        <Row className=\"align-items-center justify-content-center\">\r\n          <Col sm={12} md={10} lg={7}>\r\n            <div className=\"container\">\r\n              <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                {isSignUp && (\r\n                  <FormGroup className=\"my-3\">\r\n                    <CustomFormGroup\r\n                      type=\"text\"\r\n                      register={register}\r\n                      placeholder=\"myName kumar\"\r\n                      name=\"name\"\r\n                      errors={errors}\r\n                    />\r\n                  </FormGroup>\r\n                )}\r\n\r\n                <FormGroup className=\"my-3\">\r\n                  <CustomFormGroup\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    register={register}\r\n                    placeholder=\"myname@gmail.com\"\r\n                    errors={errors}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"my-3\">\r\n                  <CustomFormGroup\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    register={register}\r\n                    placeholder=\"kingandqueen1@\"\r\n                    errors={errors}\r\n                  />\r\n                </FormGroup>\r\n\r\n                {authError.message && (\r\n                  <h6 className=\"error\">{authError.message}</h6>\r\n                )}\r\n\r\n                <FormGroup className=\"mt-2\">\r\n                  <ButtonLoading\r\n                    disabled={authLoading ? true : false}\r\n                    type=\"submit\"\r\n                    isLoading={authLoading}\r\n                    className=\"btn d-block w-100\"\r\n                    text={isSignUp ? \"signup\" : \"login\"}\r\n                  />\r\n                </FormGroup>\r\n              </form>\r\n\r\n              <div className=\"extra\">\r\n                <h6 className=\"extra__message\">\r\n                  {isSignUp\r\n                    ? \"Already have an account?\"\r\n                    : \"Don't have an account?\"}\r\n                  <span onClick={handleSwitchMode}>\r\n                    Click here to {isSignUp ? \"SignUp\" : \"Login\"}{\" \"}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","D:\\react-ekart-project\\client\\src\\components\\Navbar\\NavBar.jsx",["217"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { authData__Fun, logout__Api } from \"../../Redux/Actions/AuthAction\";\r\n\r\nconst NavBar = () => {\r\n  const CartItems = useSelector(({ CartReducer: { cart } }) => cart);\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n\r\n  const inCartLength = CartItems.length;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout__Api());\r\n  };\r\n\r\n  useEffect(() => {\r\n    let user = sessionStorage.getItem(\"user\");\r\n    if (user) {\r\n      dispatch(authData__Fun(JSON.parse(user)));\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <div className=\"NavBar__container\">\r\n        <div className=\"NavBar__logo\" onClick={() => history.push(\"/\")}>\r\n          <span>E-cart</span>\r\n        </div>\r\n\r\n        <ul className=\"NavBar__menu pt-2\">\r\n          <li>\r\n            <NavLink exact to=\"/\">\r\n              <i className=\"fas fa-home\"></i>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink exact to=\"/cart\">\r\n              <i className=\"fas fa-cart-plus\"></i>\r\n              <sup>\r\n                <Badge pill className=\"text-light\" variant=\"primary\">\r\n                  {inCartLength && inCartLength}\r\n                </Badge>\r\n              </sup>\r\n            </NavLink>\r\n          </li>\r\n\r\n          {isAuth.role === \"admin\" && (\r\n            <Dropdown>\r\n              <Dropdown.Toggle>Admin</Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item as={NavLink} to=\"/account\">\r\n                  orders\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item onClick={handleLogout}>Logout</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n\r\n          {!isAuth.isAllowed ? (\r\n            <li>\r\n              <NavLink to=\"/authForm\">Login</NavLink>\r\n            </li>\r\n          ) : (\r\n            <Dropdown\r\n              style={\r\n                isAuth.role === \"admin\"\r\n                  ? { display: \"none\" }\r\n                  : { display: \"initial\" }\r\n              }>\r\n              <Dropdown.Toggle className=\"mx-2\">\r\n                {isAuth.name && isAuth.name.slice(0, 7)}\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item as={NavLink} to=\"/account\">\r\n                  Account\r\n                </Dropdown.Item>\r\n\r\n                <Dropdown.Item onClick={handleLogout}>Logout</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\react-ekart-project\\client\\src\\App.js",["218"],"import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home page/Home\";\r\nimport NavBar from \"./components/Navbar/NavBar\";\r\nimport \"./styles/style.scss\";\r\nimport CustomSpinner from \"./components/Common/Spinner\";\r\nimport { fetchAllItems__fun } from \"./Redux/Actions/CartAction\";\r\n\r\nconst AuthForm = lazy(() => import(\"./components/AuthForm\"));\r\nconst SpecificItem = lazy(() =>\r\n  import(\"./components/specific item/SpecificItem\")\r\n);\r\nconst RatingForm = lazy(() => import(\"./components/Ratings/RatingForm\"));\r\nconst Cart = lazy(() => import(\"./components/Cart/Cart\"));\r\nconst Account = lazy(() => import(\"./components/Account\"));\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n\r\n  const CartItems = useSelector(({ CartReducer: { cart } }) => cart);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const AuthRoute = ({ children, ...props }) => (\r\n    <Route\r\n      {...props}\r\n      render={() =>\r\n        isAuth.role === \"admin\" ? (\r\n          children\r\n        ) : isAuth.role === \"user\" ? (\r\n          children\r\n        ) : (\r\n          <Redirect to=\"/authForm\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n\r\n  useEffect(() => {\r\n    let localCart = localStorage.getItem(\"inCart\");\r\n\r\n    if (localCart) {\r\n      dispatch(fetchAllItems__fun(JSON.parse(localCart)));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"inCart\", JSON.stringify(CartItems));\r\n  }, [CartItems]);\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Switch>\r\n        <Suspense fallback={<CustomSpinner />}>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/cart\" component={Cart} />\r\n          <Route exact path=\"/specificItem/:id\" component={SpecificItem} />\r\n\r\n          <Route exact path=\"/authForm\" component={AuthForm} />\r\n\r\n          <AuthRoute path=\"/ratingForm/:id\">\r\n            <RatingForm />\r\n          </AuthRoute>\r\n\r\n          <AuthRoute path=\"/account\">\r\n            <Account />\r\n          </AuthRoute>\r\n        </Suspense>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\AuthAction.js",["219"],"import axios from \"axios\";\r\n\r\nexport const AUTH__DATA = \"AUTH__DATA\";\r\nexport const AUTH__LOADING = \"AUTH__LOADING\";\r\nexport const AUTH__ERROR = \"AUTH__ERROR\";\r\nexport const SET_AUTH__ERROR = \"SET_AUTH__ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const authData__Fun = payload => ({ type: AUTH__DATA, payload });\r\nexport const logout__Fun = () => ({ type: LOGOUT });\r\n\r\nexport const loading__Fun = () => ({ type: AUTH__LOADING });\r\nexport const error__Fun = payload => ({ type: AUTH__ERROR, payload });\r\nexport const setAuthError__Fun = () => ({ type: SET_AUTH__ERROR });\r\n\r\nexport const login__Api = userData => async dispatch => {\r\n  dispatch(loading__Fun());\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_URL}/login`,\r\n      userData\r\n    );\r\n\r\n    dispatch(authData__Fun(data));\r\n    sessionStorage.setItem(\"user\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(error__Fun({ message: error.response.data.errorResult.email }));\r\n  }\r\n};\r\n\r\nexport const signup__Api = userData => async dispatch => {\r\n  dispatch(loading__Fun());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_URL}/signup`,\r\n      userData\r\n    );\r\n\r\n    dispatch(authData__Fun(data));\r\n    sessionStorage.setItem(\"user\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(error__Fun(error.response.data.errorResult));\r\n  }\r\n};\r\n\r\nexport const updateAccount__Api = userData => async dispatch => {\r\n  dispatch(loading__Fun());\r\n\r\n  try {\r\n    const { data } = await axios.patch(\r\n      `${process.env.REACT_APP_URL}/updateAccount`,\r\n      userData\r\n    );\r\n    dispatch(authData__Fun(data));\r\n    sessionStorage.setItem(\"user\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(error__Fun(error.response.data.errorResult));\r\n  }\r\n};\r\n\r\nexport const logout__Api = () => async dispatch => {\r\n  const data = await axios.get(`${process.env.REACT_APP_URL}/logout`);\r\n  dispatch(logout__Fun());\r\n  localStorage.removeItem(\"orderDetails\");\r\n  sessionStorage.removeItem(\"ratings\");\r\n};\r\n","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\CartAction.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\AuthReducer.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\CartReducer.js",["220","221","222"],"import {\r\n  ADDTOCART,\r\n  REMOVEFROMCART,\r\n  INCQTY,\r\n  DECQTY,\r\n  FETCHALL,\r\n  CLEARCART,\r\n} from \"../Actions/CartAction\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nexport const CartReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCHALL:\r\n      return {\r\n        cart: [...payload],\r\n      };\r\n\r\n    case ADDTOCART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, payload],\r\n      };\r\n\r\n    case REMOVEFROMCART:\r\n      return {\r\n        cart: [...state.cart.filter(item => item.id != payload)],\r\n      };\r\n\r\n    case CLEARCART:\r\n      return {\r\n        cart: [],\r\n      };\r\n\r\n    case INCQTY:\r\n      const copyCart1 = [...state.cart];\r\n\r\n      copyCart1.forEach(item => {\r\n        if (item.id == payload) {\r\n          item.qty = Number(item.qty) + 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        cart: [...copyCart1],\r\n      };\r\n\r\n    case DECQTY:\r\n      const copyCart2 = [...state.cart];\r\n\r\n      copyCart2.forEach(item => {\r\n        if (item.id == payload) {\r\n          item.qty = Number(item.qty) - 1;\r\n        }\r\n      });\r\n\r\n      return {\r\n        cart: [...copyCart2],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\react-ekart-project\\client\\src\\components\\Common\\Spinner.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Ratings\\Ratings.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Ratings\\RatingForm.jsx",["223","224"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { useOrderLocalStoage } from \"../customhooks/useOrderLocalStorage\";\r\nimport { createRatings__Api } from \"../../Redux/Actions/RatingAction\";\r\nimport { useRatingsStorage } from \"../customhooks/useRatingsSessionStorage\";\r\n\r\nconst RatingForm = () => {\r\n  const { id } = useParams();\r\n  const [OP] = useOrderLocalStoage();\r\n  //here OP=ordered product\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let list = [];\r\n  const { ratings } = useRatingsStorage();\r\n\r\n  OP.length && OP.forEach(item => list.push(...item.productId.split(\",\")));\r\n\r\n  //find the product id in productId's array\r\n  // let findId = productIds.find(item => item === id);\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n  const [error, setError] = useState({ comment: \"\", rating: \"\" });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (rating <= 0) {\r\n      setError({\r\n        comment: \"\",\r\n        rating: \"rating must be greater than 0\",\r\n      });\r\n    } else if (e.target.comment.value.trim() === \"\") {\r\n      setError({ rating: \"\", comment: \"Please provide comment\" });\r\n    } else {\r\n      setError({ rating: \"\", comment: \"\" });\r\n\r\n      dispatch(\r\n        createRatings__Api({\r\n          productId: id,\r\n          description: e.target.comment.value,\r\n          ratings: rating,\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const changeRating = (newRating, name) => {\r\n    setRating(newRating);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ratingForm\">\r\n      {isAuth ? (\r\n        !list.includes(id) ? (\r\n          <div className=\"text-center\">\r\n            <h3>Haven't purchased this product?</h3>\r\n            <h5 className=\"my-3\">\r\n              Sorry! You are not allowed to review this product since you\r\n              haven't bought it on E-kart.\r\n            </h5>\r\n            <Button onClick={() => history.push(`/specificItem/${id}`)}>\r\n              Buy now\r\n            </Button>\r\n          </div>\r\n        ) : ratings\r\n            .filter(item => item.userId == isAuth.id)\r\n            .find(item => item.productId == id) ? (\r\n          <h3 className=\"text-center \">You already rated this product....</h3>\r\n        ) : (\r\n          <Container>\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              <Col md={8} sm={12} lg={6}>\r\n                <h1 className=\"heading\">Ratings and Reviews:-</h1>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Label className=\"mr-3\">Ratings:-</Form.Label>\r\n                    <StarRatings\r\n                      rating={rating}\r\n                      starRatedColor=\"#15b7b9\"\r\n                      changeRating={changeRating}\r\n                      numberOfStars={5}\r\n                      name=\"rating\"\r\n                      starHoverColor=\"#11d3bc\"\r\n                      starDimension=\"40px\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mt-5\">\r\n                    <Form.Label>Comment:-</Form.Label>\r\n                    <Form.Control as=\"textarea\" name=\"comment\" />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button className=\"d-block w-100\" type=\"submit\">\r\n                      submit\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <div className=\"error\">\r\n                  <h6 className=\"text-danger font-weight-bold\">\r\n                    {error.comment && error.comment}\r\n                    {error.rating && error.rating}\r\n                  </h6>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )\r\n      ) : (\r\n        <h3 className=\"text-center\">Please Login to rate this product</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingForm;\r\n","D:\\react-ekart-project\\client\\src\\components\\specific item\\RatingContainer.jsx",["225"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Ratings from \"../Ratings/Ratings\";\r\nimport { getSpecificRatings__Api } from \"../../Redux/Actions/RatingAction\";\r\nimport { useRatingsStorage } from \"../customhooks/useRatingsSessionStorage\";\r\n\r\nconst RatingContainer = ({ productId }) => {\r\n  const history = useHistory();\r\n  const { findRatings } = useRatingsStorage();\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n  const ratings__info = useSelector(\r\n    ({ RatingsReducer: { specificRating } }) => specificRating\r\n  );\r\n  let dispatch = useDispatch();\r\n  let result = findRatings(productId);\r\n\r\n  const handleRateProduct = () => {\r\n    if (isAuth) {\r\n      history.push(`/ratingForm/${productId}`);\r\n    } else {\r\n      history.push(\"/authForm\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (result && result.length) {\r\n      dispatch(getSpecificRatings__Api(productId));\r\n    }\r\n  }, [productId]);\r\n\r\n  return (\r\n    <div className=\"ratings\">\r\n      <div className=\"ratings__container\">\r\n        <div className=\"d-flex justify-content-between align-items-center mb-5\">\r\n          <h1 className=\"ratings__mainTitle\">Ratings:-</h1>\r\n\r\n          <Button\r\n            className=\"rateProductBtn font-weight-bold\"\r\n            onClick={handleRateProduct}>\r\n            Rate Product\r\n          </Button>\r\n        </div>\r\n\r\n        {ratings__info.length ? (\r\n          ratings__info.map(\r\n            ({ name, createdAt, description, ratings, _id }) => (\r\n              <Ratings\r\n                key={_id}\r\n                userName={name}\r\n                ratings={ratings}\r\n                comments={description}\r\n                createdAt={createdAt}\r\n              />\r\n            )\r\n          )\r\n        ) : (\r\n          <h5 className=\"font-weight-bold text-secondary\">No ratings...</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingContainer;\r\n","D:\\react-ekart-project\\client\\src\\components\\Account\\index.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Account\\Products\\Products.jsx",["226"],"import React, { useEffect } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SingleProduct from \"./SingleProduct\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useOrderLocalStoage } from \"../../customhooks/useOrderLocalStorage\";\r\n\r\nconst Products = () => {\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n\r\n  const [OrderedProducts] = useOrderLocalStoage();\r\n\r\n  const thStyle = {\r\n    fontSize: \"1.1rem\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"products\">\r\n        <Row>\r\n          <Col sm={12} md={11}>\r\n            <div className=\"products__header d-flex justify-content-between\">\r\n              <div className=\"products__title mb-4\">Products:-</div>\r\n            </div>\r\n\r\n            <div className=\"products__table \">\r\n              {OrderedProducts.length ? (\r\n                <Table\r\n                  striped\r\n                  bordered\r\n                  hover\r\n                  responsive\r\n                  className=\"text-center\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th style={thStyle}>Product Id</th>\r\n                      <th style={thStyle}>Quantity</th>\r\n                      <th style={thStyle}>Customer Id</th>\r\n                      <th style={thStyle}>Total price</th>\r\n                      <th style={thStyle}>Status</th>\r\n                      {isAuth.role === \"admin\" && <th>Mark as Delivered</th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {OrderedProducts.map(\r\n                      (\r\n                        { status, productId, totalPrice, customerId, qty, _id },\r\n                        i\r\n                      ) => (\r\n                        <SingleProduct\r\n                          status={status}\r\n                          customerId={customerId}\r\n                          price={totalPrice}\r\n                          productId={productId}\r\n                          qty={qty}\r\n                          key={_id}\r\n                          id={_id}\r\n                        />\r\n                      )\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <h5 className=\"text-center text-capitalize\">\r\n                  you are not ordered any products....\r\n                </h5>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\react-ekart-project\\client\\src\\components\\Account\\Products\\SingleProduct.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Account\\AccountForm.jsx",["227","228","229","230"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport CustomFormGroup from \"../Common/CustomFormGroup\";\r\nimport ButtonLoading from \"../Common/ButtonLoading\";\r\nimport {\r\n  setAuthError__Fun,\r\n  updateAccount__Api,\r\n} from \"../../Redux/Actions/AuthAction\";\r\n\r\nconst AccountForm = () => {\r\n  const [closeBtn, setCloseBtn] = useState(false);\r\n  const authError = useSelector(({ AuthReducer: { error } }) => error);\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n  const AuthError = useSelector(({ AuthReducer: { error } }) => error);\r\n\r\n  const authLoading = useSelector(({ AuthReducer: { loading } }) => loading);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmitBtn = () => {\r\n    setCloseBtn(true);\r\n  };\r\n\r\n  const handleCloseBtn = () => {\r\n    reset();\r\n    setCloseBtn(false);\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    setCloseBtn(false);\r\n    if (data.password != data[\"confirm password\"]) {\r\n      setConfirmPasswordError(\"password and cofirm password are different\");\r\n    } else {\r\n      setConfirmPasswordError(\"\");\r\n      const { name, email, password } = data;\r\n      dispatch(updateAccount__Api({ name, email, password }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    AuthError && dispatch(setAuthError__Fun());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"accountForm mb-3\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h6 className=\"accountForm__title\">Account:-</h6>\r\n          {closeBtn && (\r\n            <button\r\n              className=\"btn btn-danger font-weight-bold\"\r\n              onClick={handleCloseBtn}>\r\n              X\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <Row>\r\n          <Col>\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup className=\"my-3\">\r\n                <CustomFormGroup\r\n                  type=\"text\"\r\n                  register={register}\r\n                  placeholder=\"myName kumar\"\r\n                  name=\"name\"\r\n                  errors={errors}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"my-3\">\r\n                <CustomFormGroup\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  register={register}\r\n                  placeholder=\"myname@gmail.com\"\r\n                  errors={errors}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"my-3\">\r\n                <CustomFormGroup\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  register={register}\r\n                  placeholder=\"namaste1@\"\r\n                  errors={errors}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"my-3\">\r\n                <CustomFormGroup\r\n                  type=\"password\"\r\n                  name=\"confirm password\"\r\n                  register={register}\r\n                  placeholder=\"namaste1@\"\r\n                  errors={errors}\r\n                />\r\n              </FormGroup>\r\n\r\n              {authError.message && (\r\n                <h6 className=\"error\">{authError.message}</h6>\r\n              )}\r\n\r\n              {confirmPasswordError && (\r\n                <h6 className=\"error\">{confirmPasswordError}</h6>\r\n              )}\r\n\r\n              <FormGroup className=\"mt-2\">\r\n                <ButtonLoading\r\n                  onClick={handleSubmitBtn}\r\n                  disabled={authLoading ? true : false}\r\n                  type=\"submit\"\r\n                  isLoading={authLoading}\r\n                  className=\"btn d-block w-100\"\r\n                  text=\"Update\"\r\n                />\r\n              </FormGroup>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountForm;\r\n","D:\\react-ekart-project\\client\\src\\components\\Common\\InputValidationProps.js",["231","232"],"export const nameProps = {\r\n  required: \"this is required\",\r\n  minLength: { value: 4, message: \"Min length is 4\" },\r\n  maxLength: {\r\n    value: 15,\r\n    message: \"Max length is 15\",\r\n  },\r\n};\r\n\r\nexport const emailProps = {\r\n  required: \"this is required\",\r\n  pattern: {\r\n    value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n    message: \"Invalid email address\",\r\n  },\r\n};\r\n\r\nexport const passwordProps = {\r\n  required: \"this is required\",\r\n  pattern: {\r\n    value: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,20}$/,\r\n    message:\r\n      \"7 to 20 characters which contain at least one numeric digit and a special character\",\r\n  },\r\n};\r\n","D:\\react-ekart-project\\client\\src\\components\\Common\\CustomFormGroup.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\ButtonLoading.jsx",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\OrderReducer.js",["233"],"import {\r\n  CREATE_ORDERS,\r\n  GET_ORDER_DETAIL,\r\n  ORDER__LOADING,\r\n  ORDER__ERROR,\r\n  UPDATE_ORDER_STATUS,\r\n} from \"../Actions/OrderAction\";\r\n\r\nconst intialState = {\r\n  orders: [],\r\n  loading: false,\r\n  error: [],\r\n};\r\n\r\nexport const OrderReducer = (state = intialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CREATE_ORDERS:\r\n      return {\r\n        orders: [...state.orders, payload],\r\n        loading: false,\r\n        error: [],\r\n      };\r\n\r\n    case GET_ORDER_DETAIL:\r\n      return {\r\n        ...state,\r\n        orders: [...payload],\r\n      };\r\n\r\n    case UPDATE_ORDER_STATUS:\r\n      const oldOrders = state.orders.filter(item => item._id != payload.id);\r\n      return {\r\n        ...state,\r\n        orders: [...oldOrders, payload.data],\r\n      };\r\n\r\n    case ORDER__LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: [],\r\n      };\r\n\r\n    case ORDER__ERROR:\r\n      return {\r\n        orders: [],\r\n        loading: false,\r\n        error: [payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\RatingReducer.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Actions\\RatingAction.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Actions\\OrderAction.js",[],"D:\\react-ekart-project\\client\\src\\components\\customhooks\\useOrderLocalStorage.js",["234"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getAllOrderDetails__Api,\r\n  getOrderDetail__Api,\r\n  getOrderDetail__fun,\r\n} from \"../../Redux/Actions/OrderAction\";\r\n\r\nexport const useOrderLocalStoage = () => {\r\n  const localName = \"orderDetails\";\r\n  const dispatch = useDispatch();\r\n  const OrderedProducts = useSelector(({ OrderReducer: { orders } }) => orders);\r\n  const isAuth = useSelector(({ AuthReducer: { authData } }) => authData);\r\n\r\n  useEffect(() => {\r\n    let localData = localStorage.getItem(localName);\r\n\r\n    if (localData && JSON.parse(localData).length) {\r\n      dispatch(getOrderDetail__fun(JSON.parse(localData)));\r\n    } else {\r\n      if (isAuth.role === \"admin\") {\r\n        dispatch(getAllOrderDetails__Api());\r\n      } else {\r\n        dispatch(getOrderDetail__Api());\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localName, JSON.stringify(OrderedProducts));\r\n  }, [OrderedProducts]);\r\n\r\n  return [OrderedProducts];\r\n};\r\n","D:\\react-ekart-project\\client\\src\\components\\customhooks\\useRatingsSessionStorage.js",["235","236"],"import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getAllRatings__Api,\r\n  getAllRatings__fun,\r\n} from \"../../Redux/Actions/RatingAction\";\r\n\r\nexport const useRatingsStorage = () => {\r\n  const localName = \"ratings\";\r\n  const dispatch = useDispatch();\r\n  const ratings = useSelector(({ RatingsReducer: { ratings } }) => ratings);\r\n\r\n  useEffect(() => {\r\n    let localData = sessionStorage.getItem(localName);\r\n\r\n    if (localData && JSON.parse(localData).length) {\r\n      dispatch(getAllRatings__fun(JSON.parse(localData)));\r\n    } else {\r\n      dispatch(getAllRatings__Api());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(localName, JSON.stringify(ratings));\r\n  }, [ratings]);\r\n\r\n  const findRatings = id =>\r\n    ratings.length && id ? ratings.filter(item => item.productId == id) : null;\r\n\r\n  const findSumOfRatings = id => {\r\n    let result = findRatings(id);\r\n\r\n    return result\r\n      ? result.reduce((acc, curr) => acc + Number(curr.ratings), 0) /\r\n          result.length\r\n      : null;\r\n  };\r\n\r\n  return { ratings, findSumOfRatings, findRatings };\r\n};\r\n",{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"237","replacedBy":"241"},{"ruleId":"239","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":34,"column":6,"nodeType":"245","endLine":34,"endColumn":8,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":38,"column":6,"nodeType":"245","endLine":38,"endColumn":26,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":17,"column":31,"nodeType":"251","messageId":"252","endLine":17,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":33,"column":62,"nodeType":"251","messageId":"252","endLine":33,"endColumn":64},{"ruleId":"243","severity":1,"message":"253","line":61,"column":6,"nodeType":"245","endLine":61,"endColumn":8,"suggestions":"254"},{"ruleId":"249","severity":1,"message":"255","line":64,"column":20,"nodeType":"251","messageId":"252","endLine":64,"endColumn":22},{"ruleId":"243","severity":1,"message":"256","line":66,"column":6,"nodeType":"245","endLine":66,"endColumn":15,"suggestions":"257"},{"ruleId":"249","severity":1,"message":"250","line":29,"column":67,"nodeType":"251","messageId":"252","endLine":29,"endColumn":69},{"ruleId":"258","severity":1,"message":"259","line":19,"column":9,"nodeType":"260","messageId":"261","endLine":19,"endColumn":20},{"ruleId":"243","severity":1,"message":"262","line":48,"column":6,"nodeType":"245","endLine":48,"endColumn":70,"suggestions":"263"},{"ruleId":"243","severity":1,"message":"244","line":26,"column":6,"nodeType":"245","endLine":26,"endColumn":8,"suggestions":"264"},{"ruleId":"243","severity":1,"message":"244","line":52,"column":6,"nodeType":"245","endLine":52,"endColumn":8,"suggestions":"265"},{"ruleId":"258","severity":1,"message":"266","line":63,"column":9,"nodeType":"260","messageId":"261","endLine":63,"endColumn":13},{"ruleId":"249","severity":1,"message":"255","line":29,"column":53,"nodeType":"251","messageId":"252","endLine":29,"endColumn":55},{"ruleId":"249","severity":1,"message":"250","line":41,"column":21,"nodeType":"251","messageId":"252","endLine":41,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":54,"column":21,"nodeType":"251","messageId":"252","endLine":54,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":74,"column":41,"nodeType":"251","messageId":"252","endLine":74,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":75,"column":42,"nodeType":"251","messageId":"252","endLine":75,"endColumn":44},{"ruleId":"243","severity":1,"message":"267","line":31,"column":6,"nodeType":"245","endLine":31,"endColumn":17,"suggestions":"268"},{"ruleId":"258","severity":1,"message":"269","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"270","line":21,"column":9,"nodeType":"260","messageId":"261","endLine":21,"endColumn":15},{"ruleId":"258","severity":1,"message":"271","line":27,"column":9,"nodeType":"260","messageId":"261","endLine":27,"endColumn":16},{"ruleId":"249","severity":1,"message":"255","line":40,"column":23,"nodeType":"251","messageId":"252","endLine":40,"endColumn":25},{"ruleId":"243","severity":1,"message":"272","line":51,"column":6,"nodeType":"245","endLine":51,"endColumn":8,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":13,"column":19,"nodeType":"276","messageId":"277","endLine":13,"endColumn":20,"suggestions":"278"},{"ruleId":"274","severity":1,"message":"275","line":13,"column":35,"nodeType":"276","messageId":"277","endLine":13,"endColumn":36,"suggestions":"279"},{"ruleId":"249","severity":1,"message":"255","line":31,"column":62,"nodeType":"251","messageId":"252","endLine":31,"endColumn":64},{"ruleId":"243","severity":1,"message":"280","line":27,"column":6,"nodeType":"245","endLine":27,"endColumn":8,"suggestions":"281"},{"ruleId":"243","severity":1,"message":"244","line":21,"column":6,"nodeType":"245","endLine":21,"endColumn":8,"suggestions":"282"},{"ruleId":"249","severity":1,"message":"250","line":28,"column":66,"nodeType":"251","messageId":"252","endLine":28,"endColumn":68},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],["283"],["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["285"],"React Hook useEffect has a missing dependency: 'allProducts'. Either include it or remove the dependency array.",["286"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["287"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'findItemInCart'. Either include it or remove the dependency array.",["288"],"no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'history' and 'reset'. Either include them or remove the dependency array.",["289"],["290"],["291"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'result'. Either include them or remove the dependency array.",["292"],"'useEffect' is defined but never used.","'isAuth' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AuthError' and 'dispatch'. Either include them or remove the dependency array.",["293"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["294","295"],["296","297"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isAuth.role'. Either include them or remove the dependency array.",["298"],["299"],"no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"300","fix":"310"},{"desc":"300","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"messageId":"316","fix":"317","desc":"318"},{"messageId":"319","fix":"320","desc":"321"},{"messageId":"316","fix":"322","desc":"318"},{"messageId":"319","fix":"323","desc":"321"},{"desc":"324","fix":"325"},{"desc":"300","fix":"326"},"Update the dependencies array to be: [dispatch]",{"range":"327","text":"328"},"Update the dependencies array to be: [allProducts, allProducts.length]",{"range":"329","text":"330"},"Update the dependencies array to be: [dispatch, id]",{"range":"331","text":"332"},"Update the dependencies array to be: [findItemInCart, product]",{"range":"333","text":"334"},"Update the dependencies array to be: [isSignUp, isAuth.isAllowed, authError.message, authError.email, reset, history]",{"range":"335","text":"336"},{"range":"337","text":"328"},{"range":"338","text":"328"},"Update the dependencies array to be: [dispatch, productId, result]",{"range":"339","text":"340"},"Update the dependencies array to be: [AuthError, dispatch]",{"range":"341","text":"342"},"removeEscape",{"range":"343","text":"344"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"345","text":"346"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"347","text":"344"},{"range":"348","text":"346"},"Update the dependencies array to be: [dispatch, isAuth.role]",{"range":"349","text":"350"},{"range":"351","text":"328"},[1100,1102],"[dispatch]",[1205,1225],"[allProducts, allProducts.length]",[2031,2033],"[dispatch, id]",[2184,2193],"[findItemInCart, product]",[1509,1573],"[isSignUp, isAuth.isAllowed, authError.message, authError.email, reset, history]",[824,826],[1513,1515],[1070,1081],"[dispatch, productId, result]",[1731,1733],"[AuthError, dispatch]",[289,290],"",[289,289],"\\",[305,306],[305,305],[869,871],"[dispatch, isAuth.role]",[642,644]]