[{"D:\\react-ekart-project\\client\\src\\index.js":"1","D:\\react-ekart-project\\client\\src\\App.jsx":"2","D:\\react-ekart-project\\client\\src\\data.js":"3","D:\\react-ekart-project\\client\\src\\components\\Home page\\Home.jsx":"4","D:\\react-ekart-project\\client\\src\\components\\Home page\\Carousel\\CarouselSlider.jsx":"5","D:\\react-ekart-project\\client\\src\\components\\Home page\\BrandNewProducts.jsx":"6","D:\\react-ekart-project\\client\\src\\components\\Home page\\AllProducts.jsx":"7","D:\\react-ekart-project\\client\\src\\components\\Cart\\Cart.jsx":"8","D:\\react-ekart-project\\client\\src\\components\\Cart\\CartItem.jsx":"9","D:\\react-ekart-project\\client\\src\\components\\Cart\\PriceDetail.jsx":"10","D:\\react-ekart-project\\client\\src\\components\\Common\\NavBar.jsx":"11","D:\\react-ekart-project\\client\\src\\components\\specific item\\SpecificItem.jsx":"12","D:\\react-ekart-project\\client\\src\\components\\Common\\PriceDisplay.jsx":"13","D:\\react-ekart-project\\client\\src\\components\\Common\\CustomCard.jsx":"14","D:\\react-ekart-project\\client\\src\\components\\Common\\RatingDisplay.jsx":"15","D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSection.jsx":"16","D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSectionCard.jsx":"17","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\index.js":"18","D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\ProductReducer.js":"19","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\ProductActions.js":"20","D:\\react-ekart-project\\client\\src\\components\\Cart\\IncBtn.jsx":"21","D:\\react-ekart-project\\client\\src\\components\\Cart\\DecBtn.jsx":"22","D:\\react-ekart-project\\client\\src\\components\\Common\\Pagination.jsx":"23"},{"size":538,"mtime":1609003373234,"results":"24","hashOfConfig":"25"},{"size":1474,"mtime":1609008003192,"results":"26","hashOfConfig":"25"},{"size":16778,"mtime":1609043815540,"results":"27","hashOfConfig":"25"},{"size":450,"mtime":1609244538405,"results":"28","hashOfConfig":"25"},{"size":1934,"mtime":1609270740262,"results":"29","hashOfConfig":"25"},{"size":1095,"mtime":1609002576217,"results":"30","hashOfConfig":"25"},{"size":1835,"mtime":1609269155798,"results":"31","hashOfConfig":"25"},{"size":1843,"mtime":1609050330774,"results":"32","hashOfConfig":"25"},{"size":2367,"mtime":1609049265225,"results":"33","hashOfConfig":"25"},{"size":2678,"mtime":1609058056525,"results":"34","hashOfConfig":"25"},{"size":1334,"mtime":1609004249729,"results":"35","hashOfConfig":"25"},{"size":249,"mtime":1609069786274,"results":"36","hashOfConfig":"25"},{"size":419,"mtime":1608642022477,"results":"37","hashOfConfig":"25"},{"size":901,"mtime":1609069708797,"results":"38","hashOfConfig":"25"},{"size":301,"mtime":1608642312222,"results":"39","hashOfConfig":"25"},{"size":986,"mtime":1609069441867,"results":"40","hashOfConfig":"25"},{"size":894,"mtime":1608995364135,"results":"41","hashOfConfig":"25"},{"size":166,"mtime":1608997008773,"results":"42","hashOfConfig":"25"},{"size":3622,"mtime":1609049082433,"results":"43","hashOfConfig":"25"},{"size":581,"mtime":1609048568469,"results":"44","hashOfConfig":"25"},{"size":305,"mtime":1609045814574,"results":"45","hashOfConfig":"25"},{"size":306,"mtime":1609045872847,"results":"46","hashOfConfig":"25"},{"size":661,"mtime":1609268078733,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1crfyh2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react-ekart-project\\client\\src\\index.js",[],["99","100"],"D:\\react-ekart-project\\client\\src\\App.jsx",["101"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchItemsFun } from \"./Redux/Actions/ProductActions\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { storeProducts } from \"./data\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Home from \"./components/Home page/Home\";\r\nimport NavBar from \"./components/Common/NavBar\";\r\nimport SpecificItem from \"./components/specific item/SpecificItem\";\r\n\r\nimport \"./styles/style.scss\";\r\n\r\nconst App = () => {\r\n  const Products = useSelector(({ ProductReducer: { products } }) => products);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(Products);\r\n\r\n  // only run once the first time this component is rendered\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"Products\")) {\r\n      dispatch(fetchItemsFun(JSON.parse(localStorage.getItem(\"Products\"))));\r\n    } else {\r\n      dispatch(fetchItemsFun(storeProducts));\r\n    }\r\n  }, []);\r\n\r\n  // run every time our pet state changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Products\", JSON.stringify(Products));\r\n  }, [Products]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/cart\" component={Cart} />\r\n          <Route exact path=\"/specificItem/:id\" component={SpecificItem} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\react-ekart-project\\client\\src\\data.js",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\Home.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\Carousel\\CarouselSlider.jsx",["102","103","104","105"],"D:\\react-ekart-project\\client\\src\\components\\Home page\\BrandNewProducts.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\AllProducts.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\Cart.jsx",["106"],"import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CartItem from \"./CartItem\";\r\nimport PriceDetail from \"./PriceDetail\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Cart = () => {\r\n  const Products = useSelector(({ ProductReducer: { products } }) => products);\r\n\r\n  const numOfItems =\r\n    Products.length && Products.filter(item => item.inCart == true);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"cart__container\">\r\n        <Row className=\"justify-content-around\">\r\n          <Col md={7} lg={8}>\r\n            <div className=\"left\">\r\n              <h1 className=\"cart__title\">my cart({numOfItems.length})</h1>\r\n              {numOfItems &&\r\n                numOfItems.map(\r\n                  ({\r\n                    id,\r\n                    img,\r\n                    price,\r\n                    productName,\r\n                    inCart,\r\n                    count,\r\n                    total,\r\n                    brand,\r\n                  }) => (\r\n                    <CartItem\r\n                      id={id}\r\n                      price={price}\r\n                      productName={productName}\r\n                      inCart={inCart}\r\n                      count={count}\r\n                      total={total}\r\n                      key={id}\r\n                      brand={brand}\r\n                      img={img}\r\n                    />\r\n                  )\r\n                )}\r\n            </div>\r\n          </Col>\r\n\r\n          <Col md={5} lg={4} className=\"right\">\r\n            <div className=\"priceInfo\">\r\n              <h1 className=\"priceInfo__title\">price details</h1>\r\n\r\n              {numOfItems.length ? <PriceDetail /> : \"\"}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","D:\\react-ekart-project\\client\\src\\components\\Cart\\CartItem.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\PriceDetail.jsx",["107","108"],"import React, { useEffect, useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PriceDetail = () => {\r\n  const Products = useSelector(({ ProductReducer: { products } }) => products);\r\n\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [discountPrice, setDiscountPrice] = useState(0);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [finalAmount, setfinalAmount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (Products) {\r\n      const filteredItems = Products.filter(item => item.inCart == true);\r\n      console.log(filteredItems);\r\n\r\n      const sumOfItems = filteredItems.reduce(\r\n        (acc, val) => Number(acc) + Number(val.total),\r\n        0\r\n      );\r\n\r\n      const discountAmount = sumOfItems / 10;\r\n      console.log(discountAmount);\r\n\r\n      const FinalAmount = sumOfItems - discountPrice;\r\n\r\n      setTotalItems(filteredItems.length);\r\n      setTotalPrice(sumOfItems);\r\n      setDiscountPrice(discountAmount);\r\n\r\n      FinalAmount > 0 ? setfinalAmount(FinalAmount) : setfinalAmount(0);\r\n    }\r\n  }, [Products]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"priceInfo__container\">\r\n        <Row>\r\n          <Col>\r\n            <h6 className=\"left-title\">Price({totalItems} items)</h6>\r\n          </Col>\r\n          <Col>\r\n            <h6 className=\"right-title\">{totalPrice}</h6>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-3\">\r\n          <Col>\r\n            <h6 className=\"left-title\">Discounts </h6>\r\n          </Col>\r\n          <Col>\r\n            <h6 className=\"right-title text-success\">{discountPrice}</h6>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-3\">\r\n          <Col>\r\n            <h6 className=\"left-title\">Delivery charges </h6>\r\n          </Col>\r\n          <Col>\r\n            <h6 className=\"right-title text-success\">Free</h6>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-4 border-top border-info pt-3 \">\r\n          <Col>\r\n            <h6 className=\"left-title\">Total amount</h6>\r\n          </Col>\r\n          <Col>\r\n            <h6 className=\"right-title\">{finalAmount} Rs/-</h6>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <h6 className=\"text-success mt-3\">\r\n              You will save ₹{discountPrice} on this order\r\n            </h6>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col className=\"mt-3\">\r\n            <button className=\"btn btn-primary d-block w-100\">\r\n              Place order\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PriceDetail;\r\n","D:\\react-ekart-project\\client\\src\\components\\Common\\NavBar.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\specific item\\SpecificItem.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\PriceDisplay.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\CustomCard.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\RatingDisplay.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSection.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Home page\\offer section\\OfferSectionCard.jsx",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\index.js",[],"D:\\react-ekart-project\\client\\src\\Redux\\Reducers\\ProductReducer.js",["109","110","111","112","113","114","115","116"],"import {\r\n  ADDTOCART,\r\n  DECPRICE,\r\n  FETCHITEMS,\r\n  INCPRICE,\r\n  REMOVEFROMCART,\r\n} from \"../Actions/ProductActions\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\nexport const ProductReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCHITEMS:\r\n      return {\r\n        ...state,\r\n        products: [...payload],\r\n      };\r\n\r\n    case ADDTOCART:\r\n      const copyProductlist1 = [...state.products];\r\n\r\n      //finding products in copyprodlist by id\r\n      const result1 = copyProductlist1.filter(item => item.id == payload);\r\n\r\n      console.log(result1);\r\n\r\n      //settting incart and count to true and 1\r\n      result1[0][\"inCart\"] = true;\r\n      result1[0][\"count\"] = 1;\r\n\r\n      result1[0][\"total\"] =\r\n        Number(result1[0][\"price\"]) * Number(result1[0][\"count\"]);\r\n\r\n      //finding index by payload=id\r\n      const findProductIndex1 = copyProductlist1.findIndex(\r\n        item => item.id == payload\r\n      );\r\n\r\n      //removing old product by index and adding new products\r\n      copyProductlist1.splice(findProductIndex1, 1, ...result1);\r\n\r\n      return {\r\n        products: [...copyProductlist1],\r\n      };\r\n\r\n    case REMOVEFROMCART:\r\n      const copyProductlist2 = [...state.products];\r\n\r\n      //finding products in copyprodlist by id\r\n      const result2 = copyProductlist2.filter(item => item.id == payload);\r\n\r\n      //setting inCart and count field to false and 0\r\n      result2[0][\"inCart\"] = false;\r\n      result2[0][\"count\"] = 0;\r\n\r\n      result2[0][\"total\"] =\r\n        Number(result2[0][\"price\"]) * Number(result2[0][\"count\"]);\r\n\r\n      //finding index by payload=id\r\n      const findProductIndex2 = copyProductlist2.findIndex(\r\n        item => item.id == payload\r\n      );\r\n\r\n      //removing old product by index and adding new products\r\n      copyProductlist2.splice(findProductIndex2, 1, ...result2);\r\n\r\n      return {\r\n        products: [...copyProductlist2],\r\n      };\r\n\r\n    case INCPRICE:\r\n      const copyProductlist3 = [...state.products];\r\n\r\n      //here payload =id\r\n\r\n      //finding products in copyprodlist by id\r\n      const result3 = copyProductlist3.filter(item => item.id == payload);\r\n\r\n      //increment count by 1\r\n      result3[0][\"count\"] = Number(result3[0][\"count\"]) + 1;\r\n\r\n      //cal total and set the total field value\r\n      result3[0][\"total\"] =\r\n        Number(result3[0][\"price\"]) * Number(result3[0][\"count\"]);\r\n\r\n      //finding index by payload=id\r\n      const findProductIndex3 = copyProductlist3.findIndex(\r\n        item => item.id == payload\r\n      );\r\n\r\n      //removing old product by index and adding new products\r\n      copyProductlist3.splice(findProductIndex3, 1, ...result3);\r\n      return {\r\n        products: [...copyProductlist3],\r\n      };\r\n\r\n    case DECPRICE:\r\n      const copyProductlist4 = [...state.products];\r\n\r\n      //here payload =id\r\n\r\n      //finding products in copyprodlist by id\r\n      const result4 = copyProductlist4.filter(item => item.id == payload);\r\n\r\n      //increment count by 1\r\n      result4[0][\"count\"] = Number(result4[0][\"count\"]) - 1;\r\n\r\n      //cal total and set the total field value\r\n      result4[0][\"total\"] =\r\n        Number(result4[0][\"price\"]) * Number(result4[0][\"count\"]);\r\n\r\n      //finding index by payload=id\r\n      const findProductIndex4 = copyProductlist4.findIndex(\r\n        item => item.id == payload\r\n      );\r\n\r\n      //removing old product by index and adding new products\r\n      copyProductlist4.splice(findProductIndex4, 1, ...result4);\r\n      return {\r\n        products: [...copyProductlist4],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\react-ekart-project\\client\\src\\Redux\\Actions\\ProductActions.js",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\IncBtn.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Cart\\DecBtn.jsx",[],"D:\\react-ekart-project\\client\\src\\components\\Common\\Pagination.jsx",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":27,"column":6,"nodeType":"124","endLine":27,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":17},{"ruleId":"126","severity":1,"message":"130","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"126","severity":1,"message":"131","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":11},{"ruleId":"126","severity":1,"message":"132","line":9,"column":9,"nodeType":"128","messageId":"129","endLine":9,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":12,"column":60,"nodeType":"135","messageId":"136","endLine":12,"endColumn":62},{"ruleId":"133","severity":1,"message":"134","line":16,"column":65,"nodeType":"135","messageId":"136","endLine":16,"endColumn":67},{"ruleId":"122","severity":1,"message":"137","line":35,"column":6,"nodeType":"124","endLine":35,"endColumn":16,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"134","line":25,"column":63,"nodeType":"135","messageId":"136","endLine":25,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":38,"column":25,"nodeType":"135","messageId":"136","endLine":38,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":52,"column":63,"nodeType":"135","messageId":"136","endLine":52,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":63,"column":25,"nodeType":"135","messageId":"136","endLine":63,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":79,"column":63,"nodeType":"135","messageId":"136","endLine":79,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":90,"column":25,"nodeType":"135","messageId":"136","endLine":90,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":105,"column":63,"nodeType":"135","messageId":"136","endLine":105,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":116,"column":25,"nodeType":"135","messageId":"136","endLine":116,"endColumn":27},{"ruleId":"126","severity":1,"message":"139","line":19,"column":9,"nodeType":"128","messageId":"129","endLine":19,"endColumn":20},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Products' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'discountPrice'. Either include it or remove the dependency array.",["143"],"'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},"Update the dependencies array to be: [Products, discountPrice]",{"range":"150","text":"151"},[977,979],"[dispatch]",[1139,1149],"[Products, discountPrice]"]